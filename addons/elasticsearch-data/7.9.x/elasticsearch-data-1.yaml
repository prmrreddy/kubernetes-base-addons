---
apiVersion: kubeaddons.mesosphere.io/v1beta1
kind: Addon
metadata:
  name: elasticsearch
  namespace: kubeaddons
  labels:
    kubeaddons.mesosphere.io/name: elasticsearch-data
    # TODO: we're temporarily supporting dependency on an existing default storage class
    # on the cluster, this hack will trigger re-queue on Addons until one exists.
    kubeaddons.mesosphere.io/hack-requires-defaultstorageclass: "true"
  annotations:
    catalog.kubeaddons.mesosphere.io/addon-revision: "7.9.1-1"
    appversion.kubeaddons.mesosphere.io/elasticsearch: "7.9.1"
    docs.kubeaddons.mesosphere.io/kibana: "https://www.elastic.co/guide/en/elasticsearch/reference/7.9/index.html"
    values.chart.helm.kubeaddons.mesosphere.io/elasticsearch: "https://raw.githubusercontent.com/elastic/helm-charts/7.9.1/elasticsearch/values.yaml"
spec:
  kubernetes:
    minSupportedVersion: v1.15.0
  cloudProvider:
    - name: aws
      enabled: true
    - name: azure
      enabled: true
    - name: gcp
      enabled: true
    - name: docker
      enabled: false
    - name: none
      enabled: true
  requires:
    - matchLabels:
        kubeaddons.mesosphere.io/name: elasticsearch-master
    - matchLabels:
        kubeaddons.mesosphere.io/provides: storageclass
  chartReference:
    chart: elasticsearch
    repo: https://helm.elastic.co
    version: 7.9.1
    values: |
      ---
      roles:
        master: "false"
        ingest: "false"
        data: "true"
      image: docker.elastic.co/elasticsearch/elasticsearch-oss
      esJavaOpts: "-Xmx3g -Xms3g"
      resources:
        limits:
          cpu: 2000m
          memory: 8192Mi
        requests:
          cpu: 1000m
          memory: 4608Mi
      rbac:
        create: true
      podSecurityPolicy:
        create: true
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      replicas: 4
      volumeClaimTemplate:
        resources:
          requests:
            storage: 30Gi
